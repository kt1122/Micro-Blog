{{! Use the main layout }}
{{!< main }}

{{! New Post Submission Form }}
<section class="content-container">
    {{#if loggedIn}}
        <!-- show the create post form when logged in -->
        <section class="post-form">
            <!-- make a header here -->
            <h3>Create a New {{postNeoType}}</h3>
            <form action="/posts" method="POST">
                <div class="input-fields">
                    <input type="text" id="title" name="title" class="input-field" placeholder="Title" required>
                    <textarea id="content" name="content" class="input-field" placeholder="Lorem ipsum piglet sit amet, consectetur oink-adipiscing elit. Trotting happily through the straw, little piggy tails curl est porchetta." required></textarea>
                </div>
                
                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜Ž</button>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <!-- input field for the emoji search, use oninput="searchEmojis() -->
                <input type="text" id="emoji-search" oninput="searchEmojis()" placeholder="Search Emojis">
                
                <!-- a div, id = "emoji-grid" -->
                <div id="emoji-grid"></div>
            </div>
        </section>
    {{/if}}

    <section class="posts-list">
        <!-- recent posts -->
        <section class="recents">
            <h2>Recent {{postNeoType}}s</h2>
        </section>

        <section class="postsList">
            {{#if posts.length}}
        <ul>
            {{#each posts}}
                <!-- you have to pass the user in to posts and this is the syntax -->
                {{> post this user=../user}}          
            {{/each}}
        </ul>
        {{else}}
            <!-- no posts, oh no, what now? -->
            <p>Looks like there are no {{postNeoType}}s yet. Be the first!</p>
        {{/if}}
        </section>
    </section>
</section>


{{! JavaScript for Emoji Integration }}
<script>

const apiKey = '{{apiKey}}';
const apiUrl = 'https://emoji-api.com/emojis';

/*
 You want to show a subset of the emojis. About 200. However,
 you also want the user to be able to search all emojis,
 so, put them in this array when the array is empty so 
 that you have them.
*/

let allEmojis = [];  // Global list to hold all emojis

function toggleEmojiPanel() {
    const container = document.getElementById('emoji-container');
    container.style.display = container.style.display === 'none' ? 'block' : 'none';


    if(container.style.display === 'block' && allEmojis.length == 0){
        // go "Fetch" you some emojis and show them off with displayEmojies
        fetchEmojis();
    }
}

async function fetchEmojis() { 
    try {
        const response = await fetch(`${apiUrl}?access_key=${apiKey}`);
        if (!response.ok) {
            throw new Error('Failed to fetch emojis');
        }
        const data = await response.json();
        allEmojis = data;
        displayEmojis(allEmojis); 
    } catch (error) {
        console.error('Error fetching the emojis:', error);
        document.getElementById('emoji-grid').textContent = 'Error fetching the emojis.';
    }
}

function displayEmojis(emojis, limit = 200) { 
    const container = document.getElementById('emoji-grid');
    container.innerHTML = '';  // Clear previous results
    if (Array.isArray(emojis) && emojis.length > 0) {
        emojis.slice(0, limit).forEach(emoji => {
            const emojiElement = document.createElement('span');
            emojiElement.textContent = emoji.character;
            emojiElement.title = emoji.unicodeName; 
            emojiElement.style.cursor = 'pointer';
            emojiElement.onclick = () => insertEmoji(emoji.character);
            container.appendChild(emojiElement);
        });
    } else {
        container.textContent = 'No emojis found. Try a different search!';
    }
}


function searchEmojis() {  
    const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
    const filteredEmojis = allEmojis.filter(emoji => emoji.unicodeName.toLowerCase().includes(searchTerm)); 
    displayEmojis(filteredEmojis);  
}

function insertEmoji(emoji) { 
    const textarea = document.getElementById('content');
    const start = textarea.selectionStart;
    const end = textarea.selectionEnd;
    const text = textarea.value;
    textarea.value = text.substring(0, start) + emoji + text.substring(end);
    textarea.selectionStart = textarea.selectionEnd = start + emoji.length;
    textarea.focus();  // Keep focus on the textarea
}

</script>


